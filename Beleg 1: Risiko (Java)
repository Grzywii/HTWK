//By Grzywii
//11.05.2023 Leipzig

import java.util.Arrays;
import java.util.Scanner;
import java.util.Random;

public class Main {
    public static void main(String[] args) throws InterruptedException {
        //Diese Bedingung muss hier eingegeben werden, sonst wird eine endlose Schleife laufen
        while (PlayTheGame() != 0) {
            int PlayTheGame = PlayTheGame();
        }
    }

    //Startmenü
    public static int MenuData() {
        Scanner scanner = new Scanner(System.in);
        int option;
        System.out.println("*-------------------*");
        System.out.println("MENU:");
        System.out.println("1. Fang das Game an");
        System.out.println("0. Aufhören");
        System.out.println("*-------------------*");
        System.out.print("Wähle die Option aus: ");
        option = scanner.nextInt();
        return option;
    }

    //Randomzahlen generieren
    private static int[] GenerateRandomArray() {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();
        int size = scanner.nextInt();
        while (size > 3) {
            System.out.println("Anzahl der Würfel darf nicht größer als 3 sein!");
            System.out.print("Tippe nochmal die Anzahl der Steine ein: ");
            size = scanner.nextInt();
        }
        int[] table = new int[size];
        for (int i = 0; i < table.length; i++) {
            table[i] = random.nextInt(6) + 1;
        }
        return table;
    }

    public static int PlayTheGame() throws InterruptedException {
        Scanner scanner = new Scanner(System.in);
        int userSelected;
        //Verknüpfung zu Startmenü
        userSelected = MenuData();
        switch (userSelected) {
            case 1:
                System.out.println("Das Spiel hat begonnen!");
                System.out.println("*-----------------------------------*");

                //Deklaration und Definierung
                System.out.print("(Angreifer) Tippe die Anzahl der Steine ein: ");
                int[] arrayAngreifer = GenerateRandomArray();

                System.out.print("(Verteidiger) Tippe die Anzahl der Steine ein: ");
                int[] arrayVerteidiger = GenerateRandomArray();

                //Sortierung von Arrays
                Arrays.sort(arrayAngreifer);
                Arrays.sort(arrayVerteidiger);
                System.out.println("Tippe 'los' ein, um Würfel zu werfen:");

                String input = scanner.nextLine();
                if (!input.equals("los")) {
                    System.out.println("Falscher Befehl! Probiere es nochmal!");
                    Thread.sleep(1000);
                    System.out.println("Tippe 'los' ein, um Würfel zu werfen:");
                    input = scanner.nextLine();
                }
                //Es wird gelesen, ob man den Befehl korrekt eingegeben hat
                if (input.equals("los")) {
                    System.out.println("*-----------------------------------*");

                    //Anzahl der Gewinne in einer Runde
                    int scoreA = 0;
                    int scoreV = 0;

                    //Die Randomzahlen vom Angreifer werden ausgespuckt
                    Thread.sleep(500);
                    System.out.print("Gezogene Zahl vom Angreifer: ");
                    System.out.println(Arrays.toString(arrayAngreifer));

                    //Die Randomzahlen vom Verteidiger werden ausgespuckt
                    Thread.sleep(1300);
                    System.out.print("Gezogene Zahl vom Verteidiger: ");
                    System.out.println(Arrays.toString(arrayVerteidiger));

                    for (int i = 0; i < Math.min(arrayAngreifer.length, arrayVerteidiger.length); i++) {
                        //%d gibt an, dass die Variable decimal-integer ist
                        System.out.printf("Runde %d: ", i+1);
                        Thread.sleep(500);

                        if (arrayAngreifer[i] > arrayVerteidiger[i]) {
                            System.out.println("Angreifer hat gewonnen!");
                            scoreA++;
                        } else if (arrayAngreifer[i] < arrayVerteidiger[i]) {
                            System.out.println("Verteidiger hat gewonnen!");
                            scoreV++;
                        } else {
                            System.out.println("Gleichstand");
                        }
                    }

                    if (arrayAngreifer.length > arrayVerteidiger.length) {
                        scoreA++;
                    } else if (arrayVerteidiger.length > arrayAngreifer.length) {
                        scoreV++;
                    }

                    //Zusammenfassung
                    Thread.sleep(1000);
                    System.out.println("*---------------------------------------*");
                    System.out.println("Zusammenfassung: ");
                    System.out.println("Angreifer: " + scoreA + "Punkte.");
                    System.out.println("Verteidiger: " + scoreV + "Punkte.");
                    if (scoreA > scoreV) {
                        System.out.println("ANGREIFER HAT GEWONNEN!");
                    }
                    else if (scoreA < scoreV) {
                        System.out.println("VERTEIDIGER HAT GEWONNEN!");
                        System.out.println("*-----------------------------------*");
                    }
                    else {
                        System.out.println("GLEICHSTAND! NIEMAND HAT GEWONNEN");
                        System.out.println("*-----------------------------------*");
                    }

                    //Spieler entscheidet, ob er weiterspielen möchte oder aufhören
                    Thread.sleep(1000);
                    System.out.println("Was möchtest du nun tun?");
                    userSelected = PlayTheGame();
                }
                else {
                    System.out.println("Anscheinend heute wird es nicht funktionieren ;(");
                }
                break;
            case 0:
                System.out.println("Game Over...");
                break;
            default:
                System.out.println("Falsche Wahl! Probiere nochmal.");
                break;
        }
        return userSelected;
    }
}
